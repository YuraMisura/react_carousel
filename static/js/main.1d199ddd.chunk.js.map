{"version":3,"sources":["components/Direction/Direction.tsx","components/Carousel/Carousel.tsx","components/Info/Info.tsx","App.tsx","index.tsx"],"names":["Direction","changeMoveLeft","changeMoveRight","prevDisabled","nextDisabled","className","type","onClick","disabled","Carousel","images","itemWidth","frameSize","step","animationDuration","infinity","useState","indexStart","setIndexImage","useEffect","length","prevIndexStart","styleTransform","transform","transition","style","width","map","img","index","src","alt","isEnoughImages","Info","onHandleChange","imagesLength","htmlFor","id","min","max","value","onChange","name","App","state","handleChange","event","target","setState","prevState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1d199ddd.chunk.js","sourcesContent":["import React from 'react';\nimport './Direction.scss';\n\ntype Props = {\n  changeMoveLeft: () => void;\n  changeMoveRight: () => void;\n  prevDisabled: boolean,\n  nextDisabled: boolean,\n};\n\nexport const Direction: React.FC<Props> = ({\n  changeMoveLeft,\n  changeMoveRight,\n  prevDisabled,\n  nextDisabled,\n}) => {\n  return (\n    <div className=\"change-direction\">\n      <button\n        type=\"button\"\n        onClick={changeMoveLeft}\n        disabled={prevDisabled}\n      >\n        Prev\n      </button>\n      <button\n        type=\"button\"\n        data-cy=\"next\"\n        disabled={nextDisabled}\n        onClick={changeMoveRight}\n      >\n        Next\n      </button>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './Carousel.scss';\nimport { State } from '../../types/State';\nimport { Direction } from '../Direction';\n\nexport const Carousel: React.FC<State> = ({\n  images,\n  itemWidth,\n  frameSize,\n  step,\n  animationDuration,\n  infinity,\n}) => {\n  const [indexStart, setIndexImage] = useState(0);\n\n  useEffect(() => {\n    if (images.length > frameSize) {\n      setIndexImage(prevIndexStart => prevIndexStart - 1);\n    }\n  }, [frameSize]);\n\n  const handleMoveRight = () => {\n    const isEnoughImages = indexStart + step >= images.length - frameSize;\n\n    if (isEnoughImages && !infinity) {\n      setIndexImage(images.length - frameSize);\n    } else if (isEnoughImages && infinity) {\n      setIndexImage(0);\n    } else {\n      setIndexImage(indexStart + step);\n    }\n  };\n\n  const handleMoveLeft = () => {\n    const isEnoughImages = indexStart - step < 0;\n\n    if (isEnoughImages && !infinity) {\n      setIndexImage(0);\n    } else if (isEnoughImages && infinity) {\n      setIndexImage(images.length - frameSize);\n    } else {\n      setIndexImage(indexStart - step);\n    }\n  };\n\n  const styleTransform = {\n    transform: `translateX(-${indexStart * itemWidth}px)`,\n    transition: `${animationDuration}ms`,\n  };\n\n  const prevDisabled = indexStart <= 0 && !infinity;\n  const nextDisabled = indexStart > images.length - frameSize - 1 && !infinity;\n\n  return (\n    <>\n      <div\n        className=\"Carousel\"\n        style={{ width: `${itemWidth * frameSize}px` }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={styleTransform}\n        >\n          {images.map((img, index) => (\n            <li\n              key={img}\n            >\n              <img\n                src={img}\n                alt={`${index + 1}`}\n                style={{\n                  width: `${itemWidth}px`,\n                }}\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <Direction\n        changeMoveLeft={handleMoveLeft}\n        changeMoveRight={handleMoveRight}\n        prevDisabled={prevDisabled}\n        nextDisabled={nextDisabled}\n      />\n    </>\n  );\n};\n","import React from 'react';\nimport './Info.scss';\n\ntype Props = {\n  onHandleChange: (event: React.ChangeEvent<HTMLInputElement>) => void,\n  itemWidth: number,\n  frameSize: number,\n  step: number,\n  animationDuration: number,\n  imagesLength: number,\n};\n\nexport const Info: React.FC<Props> = ({\n  onHandleChange,\n  itemWidth,\n  frameSize,\n  step,\n  animationDuration,\n  imagesLength,\n}) => {\n  return (\n    <div className=\"info\">\n      <ul className=\"info__list\">\n        <li>\n          <label\n            className=\"info__label\"\n            htmlFor=\"itemWidth\"\n          >\n            Item Width :\n            <br />\n            <input\n              type=\"number\"\n              id=\"itemWidth\"\n              min={30}\n              max={260}\n              step={10}\n              value={itemWidth}\n              onChange={onHandleChange}\n              name=\"itemWidth\"\n            />\n          </label>\n\n        </li>\n\n        <li>\n          <label\n            className=\"info__label\"\n            htmlFor=\"frameSize\"\n          >\n            Frame Size :\n            <br />\n            <input\n              type=\"number\"\n              id=\"frameSize\"\n              min={1}\n              step={1}\n              max={imagesLength}\n              value={frameSize}\n              onChange={onHandleChange}\n              name=\"frameSize\"\n            />\n          </label>\n        </li>\n\n        <li>\n          <label\n            className=\"info__label\"\n            htmlFor=\"step\"\n          >\n            Step :\n            <br />\n            <input\n              type=\"number\"\n              id=\"step\"\n              min={1}\n              value={step}\n              onChange={onHandleChange}\n              name=\"step\"\n            />\n          </label>\n        </li>\n\n        <li>\n          <label\n            className=\"info__label\"\n            htmlFor=\"animationDuration\"\n          >\n            Animation Duration :\n            <br />\n            <input\n              type=\"number\"\n              id=\"animationDuration\"\n              min={100}\n              step={100}\n              value={animationDuration}\n              onChange={onHandleChange}\n              name=\"animationDuration\"\n            />\n          </label>\n        </li>\n      </ul>\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\nimport { Info } from './components/Info';\nimport { State } from './types/State';\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinity: false,\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    this.setState((prevState) => ({\n      ...prevState,\n      [name]: +value,\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n      infinity,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1\n          data-cy=\"title\"\n          className=\"App__title\"\n        >\n          Carousel\n        </h1>\n\n        <Carousel\n          images={images}\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          step={step}\n          animationDuration={animationDuration}\n          infinity={infinity}\n        />\n\n        <Info\n          onHandleChange={(event => this.handleChange(event))}\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          step={step}\n          animationDuration={animationDuration}\n          imagesLength={images.length}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}